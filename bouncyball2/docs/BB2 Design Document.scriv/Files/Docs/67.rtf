{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\pard\tx720\sl480\slmult1\pardirnatural

\f0\fs24 \cf0 The Bounce Engine is the API that is used to scroll, blit, and make sounds in Bouncy Ball 2. The engine will take care of all the house keeping and heavy lifting required to display bitmap sprites on top of a hardware scrolling background. Hardware horizontal scrolling will be  accomplished using the Coco 3's HVEN ($FF9F) register. Stereo background music and sound will be played through the Orch-90 card and controlled by an IRQ timed sound routine. \
\
The Bounce Engine's main features include:\
\pard\tx220\tx720\li720\fi-720\sl480\slmult1\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}Hardware horizontal scrolling. The background is scrolled via hardware, and sprites on top will be refreshed as needed.\
{\listtext	\'95	}Backgrounds can be a single tile repeated, or a tile map. \
{\listtext	\'95	}Displaying the correct section of the BB2 level, rendering the correct blocks, and dressings on the blocks.\
{\listtext	\'95	}Animation management. You can tell the engine to play an animation at a particular location, and if the animation will repeat or remove the sprite once finished.\
{\listtext	\'95	}Displaying a status bar at along the bottom or top, which shows the players score, level completion status, and player lives.\
{\listtext	\'95	}2 voice background music that loops automatically\
{\listtext	\'95	}2 voice sound that can play once, a specified number of times, or infinitely.\
{\listtext	\'95	}Reading from the joysticks.\
{\listtext	\'95	}Reading from the keyboard.\
\pard\tx720\sl480\slmult1\pardirnatural
\cf0 \
A major goal with the engine is to be able to move common code into API routines that can be used in future applications. Note that since the memory layout can differ between games, different libraries can be linked included in a project, but still share a common API.\
\
\
}